{"version":3,"sources":["MiniChapter.js","App.js","serviceWorker.js","theme.js","index.js","assets/images/cardImage.png","assets/images/dsclogo.png","assets/images/shortlogo.png"],"names":["useStyles","makeStyles","theme","root","flexGrow","position","media","height","paddingTop","filter","cardActionButtons","flexDirection","backgroundColor","width","top","zIndex","cardInfoBar","bottom","color","margin","transform","MiniChapter","props","classes","Grid","item","lg","cardSize","xs","Card","className","onClick","CardActions","disableSpacing","Fab","size","aria-label","e","console","log","preventDefault","CardMedia","image","cardImage","CardHeader","title","data","Acronym","App","makeSearch","searchKey","state","handleInfoCardOpen","setState","focusCardData","infoCardOpen","gridSize","gridSpacing","handleInfoCardClose","makeMapUrl","Campus","City","addLeadDefaultSrc","ev","target","src","this","Fragment","CssBaseline","container","spacing","style","padding","Container","component","maxWidth","id","dsclogo","alt","value","onChange","newValue","onRequestSearch","borderRadius","iconButton","placeholder","marginTop","dscs","map","dsc","i","key","cardContainer","avatar","Avatar","shortlogo","action","IconButton","subheader","CardContent","Typography","variant","href","Email","Website","Facebook","Twitter","Instagram","YouTube","Linkedin","DSCApp","ButtonBase","img","onError","LeadPic","LeadName","pos","LeadEmail","LeadGithub","Component","withStyles","paper","textAlign","palette","text","secondary","overflowY","display","maxHeight","Boolean","window","location","hostname","match","createMuiTheme","overrides","outline","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.1fe9550c.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport cardImage from './assets/images/cardImage.png';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardActions from '@material-ui/core/CardActions';\nimport Grid from '@material-ui/core/Grid';\nimport Fab from '@material-ui/core/Fab';\nimport TwitterIcon from '@material-ui/icons/Twitter';\nimport FacebookIcon from '@material-ui/icons/Facebook';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        position: \"relative\"\n    },\n    media: {\n        height: 0,\n        paddingTop: '56.25%', // 16:9\n        filter: \"brightness(0.7)\"\n    },\n    cardActionButtons: {\n        flexDirection: \"row-reverse\",\n        backgroundColor: \"transparent\",\n        position: \"absolute\",\n        width: \"100%\",\n        top: \"0\",\n        zIndex: \"9999\"\n    },\n    cardInfoBar: {\n        backgroundColor: \"transparent\",\n        position: \"absolute\",\n        width: \"100%\",\n        bottom: \"0\",\n        color: \"#fff\"\n    },\n    margin: {\n        transform: \"scale(0.75, 0.75)\"\n    },\n}));\n\nexport default function MiniChapter(props) {\n    const classes = useStyles();\n    \n    return (\n        <Grid item lg={props.cardSize} xs={12}>\n            <Card className={classes.root} onClick={props.onClick}>\n                <CardActions disableSpacing className={classes.cardActionButtons}>\n                    <Fab size=\"small\" aria-label=\"Twitter\" color=\"primary\" className={classes.margin} onClick={(e) => {console.log(\"Twitter\"); e.preventDefault();}}>\n                        <TwitterIcon />\n                    </Fab>\n                    <Fab size=\"small\" aria-label=\"Facebook\" color=\"primary\" className={classes.margin} onClick={(e) => {console.log(\"Facebook\");  e.preventDefault();}}>\n                        <FacebookIcon />\n                    </Fab>\n                </CardActions>\n                <CardMedia\n                    className={classes.media}\n                    image={cardImage}\n                />\n                <CardHeader\n                    className={classes.cardInfoBar}\n                    size=\"small\"\n                    title={props.data.Acronym}\n                    onClick={props.onClick}\n                />\n            </Card>\n        </Grid>\n    );\n}","import React, { Component } from 'react';\nimport MiniChapter from './MiniChapter';\nimport dsclogo from './assets/images/dsclogo.png';\nimport shortlogo from './assets/images/shortlogo.png';\nimport cardImage from './assets/images/cardImage.png';\nimport './App.sass';\nimport data from \"./data/list.json\";\n\nimport SearchBar from 'material-ui-search-bar'\nimport { withStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseOutlined from '@material-ui/icons/CloseOutlined';\n\nimport EmailIcon from '@material-ui/icons/Email';\nimport FacebookIcon from '@material-ui/icons/Facebook';\nimport TwitterIcon from '@material-ui/icons/Twitter';\nimport InstagramIcon from '@material-ui/icons/Instagram';\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\nimport ShopIcon from '@material-ui/icons/Shop';\nimport YouTubeIcon from '@material-ui/icons/YouTube';\nimport PublicIcon from '@material-ui/icons/Public';\nimport GitHubIcon from '@material-ui/icons/GitHub';\n\n\nconst styles = (theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n  cardContainer: {\n    flexGrow: 1,\n    height: \"100vh\",\n    position: \"fixed\",\n    margin: \"0\",\n    overflowY: \"auto\"\n    // right: \"0\"\n  },\n  image: {\n    width: \"100%\",\n    height: \"100%\",\n    padding: \"1rem\"\n  },\n  img: {\n    margin: 'auto',\n    display: 'block',\n    maxWidth: '100%',\n    maxHeight: '100%',\n    borderRadius: \"1000px\"\n  },\n});\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      searchKey: \"\",\n      gridSize: 12,\n      cardSize: 3,\n      infoCardOpen: false,\n      gridSpacing: 6,\n      focusCardData: []\n    }\n  }\n\n  makeSearch = () => {\n    const searchKey = this.state.searchKey;\n    console.log(searchKey);\n  }\n\n  handleInfoCardOpen = (data) => {\n    this.setState({ focusCardData: data })\n    console.log(data)\n    this.setState({ infoCardOpen: true })\n    this.setState({ cardSize: 4 })\n    this.setState({ gridSize: 8 })\n    this.setState({ gridSpacing: 10 })\n  }\n\n  handleInfoCardClose = () => {\n    this.setState({ infoCardOpen: false })\n    this.setState({ cardSize: 3 })\n    this.setState({ gridSize: 12 })\n    this.setState({ gridSpacing: 6 })\n  }\n\n  makeMapUrl = (data) => {\n    return \"https://maps.google.com/maps?q=\" + data.Campus + \",\" + data.City + \"&t=&z=13&ie=UTF8&iwloc=&output=embed\"\n  }\n\n  addLeadDefaultSrc = (ev) => {\n    ev.target.src = `./leads/default.png`\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <React.Fragment>\n        <CssBaseline />\n        <Grid container spacing={3}>\n          <Grid item lg={this.state.gridSize} xs={12} style={{ padding: \"0 auto !important\" }}>\n            <Container component=\"div\" maxWidth=\"sm\" id=\"logoContainer\">\n              <img src={dsclogo} alt=\"DSC logo\"></img>\n              <SearchBar\n                value={this.state.searchKey}\n                onChange={(newValue) => this.setState({ searchKey: newValue })}\n                onRequestSearch={() => this.makeSearch()}\n                style={{\n                  margin: '2rem auto',\n                  maxWidth: \"100%\",\n                  borderRadius: \"500px\"\n                }}\n                classes={{\n                  iconButton: \"bluebtn\"\n                }}\n                placeholder=\"Enter Campus Name\"\n              />\n            </Container>\n            <Container maxWidth=\"lg\" component=\"div\" style={{ marginTop: \"6rem\" }}>\n              <Grid container spacing={this.state.gridSpacing}>\n                {data.dscs.map((dsc, i) => (\n                  <MiniChapter cardSize={this.state.cardSize} onClick={() => this.handleInfoCardOpen(dsc)} data={dsc} key={i} />\n                ))}\n              </Grid>\n            </Container>\n          </Grid>\n          {\n            this.state.infoCardOpen &&\n            (\n              <Grid item lg={4} xs={12} style={{ padding: \"0 auto !important\" }}>\n                <Card className={classes.cardContainer} >\n                  <CardHeader\n                    avatar={\n                      <Avatar src={shortlogo} />\n                    }\n                    action={\n                      <IconButton aria-label=\"close\" onClick={this.handleInfoCardClose}>\n                        <CloseOutlined />\n                      </IconButton>\n                    }\n                    title={this.state.focusCardData.Acronym}\n                    subheader={this.state.focusCardData.Campus}\n                  />\n                  <CardMedia\n                    style={{ height: 0, paddingTop: '56.25%' }}\n                    image={cardImage}\n                    title=\"lorem ipsum\"\n                  />\n                  <CardContent>\n                    <Typography color=\"textSecondary\" variant=\"h6\" component=\"h2\">\n                      Social Links\n                    </Typography>\n                    <IconButton aria-label=\"Email\" href={this.state.focusCardData.Email}>\n                      <EmailIcon />\n                    </IconButton>\n                    <IconButton aria-label=\"Website\" href={this.state.focusCardData.Website}>\n                      <PublicIcon />\n                    </IconButton>\n                    <IconButton aria-label=\"Facebook\" href={this.state.focusCardData.Facebook}>\n                      <FacebookIcon />\n                    </IconButton>\n                    <IconButton aria-label=\"Twitter\" href={this.state.focusCardData.Twitter}>\n                      <TwitterIcon />\n                    </IconButton>\n                    <IconButton aria-label=\"Facebook\" href={this.state.focusCardData.Instagram}>\n                      <InstagramIcon />\n                    </IconButton>\n                    <IconButton aria-label=\"Facebook\" href={this.state.focusCardData.YouTube}>\n                      <YouTubeIcon />\n                    </IconButton>\n                    <IconButton aria-label=\"Facebook\" href={this.state.focusCardData.Linkedin}>\n                      <LinkedInIcon />\n                    </IconButton>\n                    <IconButton aria-label=\"Email\" href={this.state.focusCardData.DSCApp}>\n                      <ShopIcon />\n                    </IconButton>\n                    <br></br>\n                    <br></br>\n                    <Typography color=\"textSecondary\" variant=\"h6\" component=\"h2\">\n                      Lead Details\n                    </Typography>\n                    <br></br>\n                    <Card>\n                      <Grid container>\n                        <Grid item xs={4}>\n                          <ButtonBase className={classes.image}>\n                            <img className={classes.img} onError={this.addLeadDefaultSrc} alt=\"complex\" src={\"./leads/\" + this.state.focusCardData.LeadPic} />\n                          </ButtonBase>\n                        </Grid>\n                        <Grid item xs={8}>\n                          <Card variant=\"outlined\" style={{ height: \"100%\"}}>\n                            <CardContent>\n                              <Typography variant=\"h5\" component=\"h2\">\n                              {this.state.focusCardData.LeadName}\n                              </Typography>\n                              <Typography className={classes.pos} color=\"textSecondary\">\n                                Lead 2019-20\n                              </Typography>\n                            </CardContent>\n                            <CardActions>\n                              <IconButton aria-label=\"Email\" href={\"mailto:\"+this.state.focusCardData.LeadEmail}>\n                                <EmailIcon />\n                              </IconButton>\n                              <IconButton aria-label=\"GitHub\" href={\"https://github.com/\"+this.state.focusCardData.LeadGithub}>\n                                <GitHubIcon />\n                              </IconButton>\n                            </CardActions>\n                          </Card>\n                        </Grid>\n                      </Grid>\n                    </Card>\n                    <br></br>\n                    <br></br>\n                    {/* <Card>\n                      <div className=\"mapouter\">\n                        <div className=\"gmap_canvas\">\n                          <iframe\n                            width=\"100%\"\n                            height=\"100%\"\n                            src={this.makeMapUrl(this.state.focusCardData)}\n                            frameBorder=\"0\"\n                            scrolling=\"no\"\n                            marginHeight=\"0\"\n                            marginWidth=\"0\"\n                            title=\"abc\"\n                          ></iframe>\n                        </div>\n                      </div>\n                    </Card> */}\n                  </CardContent>\n                  <hr></hr>\n                  <Container>\n                    <Typography color=\"textSecondary\" component=\"p\">\n                      The data on this page can be outdated or incorrect. Kindly contact us for corrections.\n                    </Typography>\n                  </Container>\n                </Card>\n              </Grid>\n            )\n          }\n\n        </Grid>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withStyles(styles)(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n    overrides:\n    {\n      '@global': {\n        '*::-webkit-scrollbar': {\n          width: '0.4em'\n        },\n        '*::-webkit-scrollbar-track': {\n          '-webkit-box-shadow': 'inset 0 0 6px rgba(0,0,0,0.00)'\n        },\n        '*::-webkit-scrollbar-thumb': {\n          backgroundColor: 'rgba(0,0,0,.1)',\n          outline: '1px solid slategrey'\n        }\n      },\n        'palette': {\n          'common': {\n            'black': \"#000\",\n            'white': \"#fff\"\n          },\n          'background': {\n            'paper': \"#fff\",\n            'default': \"#fafafa\"\n          },\n          'primary': {\n            'light': \"rgba(232, 240, 254, 1)\",\n            'main': \"rgba(26, 115, 232, 1)\",\n            'dark': \"rgba(23, 78, 166, 1)\",\n            'contrastText': \"#fff\"\n          },\n          'secondary': {\n            'light': \"rgba(252, 232, 230, 1)\",\n            'main': \"rgba(217, 48, 37, 1)\",\n            'dark': \"rgba(165, 14, 14, 1)\",\n            'contrastText': \"#fff\"\n          },\n          'error': {\n            'light': \"#e57373\",\n            'main': \"#f44336\",\n            'dark': \"#d32f2f\",\n            'contrastText': \"#fff\"\n          },\n          'text': {\n            'primary': \"rgba(0, 0, 0, 0.87)\",\n            'secondary': \"rgba(0, 0, 0, 0.54)\",\n            'disabled': \"rgba(0, 0, 0, 0.38)\",\n            'hint': \"rgba(0, 0, 0, 0.38)\"\n          }\n        }\n    }\n});\n\nexport default theme;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.sass';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { ThemeProvider as MuiThemeProvider } from '@material-ui/core/styles';\nimport theme from \"./theme\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <MuiThemeProvider theme={theme}>\n      <App />\n    </MuiThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/cardImage.04f7ed19.png\";","module.exports = __webpack_public_path__ + \"static/media/dsclogo.cc949774.png\";","module.exports = __webpack_public_path__ + \"static/media/shortlogo.8fb0d5d9.png\";"],"sourceRoot":""}